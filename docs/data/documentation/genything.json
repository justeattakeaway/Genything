{"variants":[{"paths":["\/documentation\/genything"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":2,"patch":0},"sections":[],"identifier":{"url":"doc:\/\/Genything\/documentation\/Genything","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":""}],"kind":"symbol","metadata":{"roleHeading":"Framework","externalID":"Genything","title":"Genything","symbolKind":"module","role":"collection","modules":[{"name":"Genything"}]},"hierarchy":{"paths":[[]]},"topicSections":[{"title":"Classes","identifiers":["doc:\/\/Genything\/documentation\/Genything\/RandomSource"]},{"title":"Protocols","identifiers":["doc:\/\/Genything\/documentation\/Genything\/Arbitrary","doc:\/\/Genything\/documentation\/Genything\/Generator","doc:\/\/Genything\/documentation\/Genything\/RandomInRangeable"]},{"title":"Structures","identifiers":["doc:\/\/Genything\/documentation\/Genything\/AnyGenerator","doc:\/\/Genything\/documentation\/Genything\/AnyRandomNumberGenerator","doc:\/\/Genything\/documentation\/Genything\/Composer","doc:\/\/Genything\/documentation\/Genything\/LazyGenerator","doc:\/\/Genything\/documentation\/Genything\/RandomizedGenerator","doc:\/\/Genything\/documentation\/Genything\/RandomizedGeneratorSequence"]},{"title":"Enumerations","identifiers":["doc:\/\/Genything\/documentation\/Genything\/Generators"]}],"references":{"doc://Genything/documentation/Genything":{"role":"collection","title":"Genything","abstract":[],"identifier":"doc:\/\/Genything\/documentation\/Genything","kind":"symbol","type":"topic","url":"\/documentation\/genything"},"doc://Genything/documentation/Genything/AnyGenerator":{"role":"symbol","title":"AnyGenerator","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyGenerator"}],"abstract":[{"type":"text","text":"A type-erased "},{"type":"codeVoice","code":"Generator"}],"identifier":"doc:\/\/Genything\/documentation\/Genything\/AnyGenerator","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AnyGenerator"}],"url":"\/documentation\/genything\/anygenerator"},"doc://Genything/documentation/Genything/AnyRandomNumberGenerator":{"role":"symbol","title":"AnyRandomNumberGenerator","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyRandomNumberGenerator"}],"abstract":[{"type":"text","text":"A type-erased "},{"type":"codeVoice","code":"RandomNumberGenerator"}],"identifier":"doc:\/\/Genything\/documentation\/Genything\/AnyRandomNumberGenerator","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AnyRandomNumberGenerator"}],"url":"\/documentation\/genything\/anyrandomnumbergenerator"},"doc://Genything/documentation/Genything/Composer":{"role":"symbol","title":"Composer","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Composer"}],"abstract":[{"type":"text","text":"The composer class which passes in the randomSource and allows us to generate more complex data with ease"}],"identifier":"doc:\/\/Genything\/documentation\/Genything\/Composer","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Composer"}],"url":"\/documentation\/genything\/composer"},"doc://Genything/documentation/Genything/RandomInRangeable":{"role":"symbol","title":"RandomInRangeable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RandomInRangeable"}],"abstract":[{"type":"text","text":"Indicates a type which can provide random values within a Range"}],"identifier":"doc:\/\/Genything\/documentation\/Genything\/RandomInRangeable","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"RandomInRangeable"}],"url":"\/documentation\/genything\/randominrangeable"},"doc://Genything/documentation/Genything/LazyGenerator":{"role":"symbol","title":"LazyGenerator","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"LazyGenerator"}],"abstract":[{"type":"text","text":"A LazyGenerator defers the initialization of a generator until a later time. This can be used when generators have state requirements which might cause them to behave in unexpected ways when shared or recreated."}],"identifier":"doc:\/\/Genything\/documentation\/Genything\/LazyGenerator","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"LazyGenerator"}],"url":"\/documentation\/genything\/lazygenerator"},"doc://Genything/documentation/Genything/RandomizedGeneratorSequence":{"role":"symbol","title":"RandomizedGeneratorSequence","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RandomizedGeneratorSequence"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"RandomizedGenerator"},{"type":"text","text":" wrapped as a "},{"type":"codeVoice","code":"Sequence"},{"type":"text","text":" which also acts as it’s own "},{"type":"codeVoice","code":"Iterator"}],"identifier":"doc:\/\/Genything\/documentation\/Genything\/RandomizedGeneratorSequence","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"RandomizedGeneratorSequence"}],"url":"\/documentation\/genything\/randomizedgeneratorsequence"},"doc://Genything/documentation/Genything/Arbitrary":{"role":"symbol","title":"Arbitrary","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Arbitrary"}],"abstract":[{"type":"text","text":"A type that conforms to the Arbitrary protocol can be used to randomly generate "},{"type":"emphasis","inlineContent":[{"type":"text","text":"any"}]},{"type":"text","text":" discrete value from the conforming type’s range of possible values"}],"identifier":"doc:\/\/Genything\/documentation\/Genything\/Arbitrary","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Arbitrary"}],"url":"\/documentation\/genything\/arbitrary"},"doc://Genything/documentation/Genything/RandomizedGenerator":{"role":"symbol","title":"RandomizedGenerator","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"RandomizedGenerator"}],"abstract":[{"type":"text","text":"A Generator binded together with a RandomSource which has copies of Generator functions which produce values. Used to persist the randomness between multiple generated productions of values."}],"identifier":"doc:\/\/Genything\/documentation\/Genything\/RandomizedGenerator","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"RandomizedGenerator"}],"url":"\/documentation\/genything\/randomizedgenerator"},"doc://Genything/documentation/Genything/Generators":{"role":"symbol","title":"Generators","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Generators"}],"abstract":[{"type":"text","text":"A namespace for types that generate"}],"identifier":"doc:\/\/Genything\/documentation\/Genything\/Generators","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Generators"}],"url":"\/documentation\/genything\/generators"},"doc://Genything/documentation/Genything/RandomSource":{"role":"symbol","title":"RandomSource","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"RandomSource"}],"abstract":[{"type":"text","text":"A RandomSource holds a reference to a RandomNumberGenerator. Allowing for a session of deterministic random state to passed around to generators which can be restarted or replayed at any time."}],"identifier":"doc:\/\/Genything\/documentation\/Genything\/RandomSource","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"RandomSource"}],"url":"\/documentation\/genything\/randomsource"},"doc://Genything/documentation/Genything/Generator":{"role":"symbol","title":"Generator","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Generator"}],"abstract":[{"type":"text","text":"Declares that a type can be used to generate an infinite sequence of values of the associatedtype "},{"type":"codeVoice","code":"T"},{"type":"text","text":"."}],"identifier":"doc:\/\/Genything\/documentation\/Genything\/Generator","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Generator"}],"url":"\/documentation\/genything\/generator"}}}
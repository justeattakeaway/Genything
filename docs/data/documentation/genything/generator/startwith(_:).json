{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"startWith"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"sequence"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/Genything\/documentation\/Genything\/AnyGenerator","preciseIdentifier":"s:9Genything12AnyGeneratorV","text":"AnyGenerator"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Sequence","preciseIdentifier":"s:ST"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The generator"}]}]},{"kind":"parameters","parameters":[{"name":"values","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Array of values which will be produced in order before the receiver takes over"}]}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"aside","style":"warning","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The resulting generator accumulates state. Shared access of the same instance may have unintended effects. Be careful not to expose this generator as a singleton. When sharing the definition use a computed variable, a function, or wrap it with a "},{"type":"codeVoice","code":"LazyGenerator"},{"type":"text","text":" so that different generator instanced are always created on access."}]}]}]}],"schemaVersion":{"major":0,"minor":2,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/genything\/generator\/startwith(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Genything\/documentation\/Genything\/Generator\/startWith(_:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Returns: A generator which iterates the elements of "},{"type":"codeVoice","code":"sequence"},{"type":"text","text":". When exhausted the generator will switch to producing values from the receiving generator."}],"kind":"symbol","metadata":{"role":"symbol","title":"startWith(_:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"startWith"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"AnyGenerator","preciseIdentifier":"s:9Genything12AnyGeneratorV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"symbolKind":"method","externalID":"s:9Genything9GeneratorPAAE9startWithyAA03AnyB0Vy1TQzGqd__STRd__7ElementQyd__AHRSlF","extendedModule":"Genything","modules":[{"name":"Genything"}]},"hierarchy":{"paths":[["doc:\/\/Genything\/documentation\/Genything","doc:\/\/Genything\/documentation\/Genything\/Generator"]]},"references":{"doc://Genything/documentation/Genything/Generator":{"role":"symbol","title":"Generator","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Generator"}],"abstract":[{"type":"text","text":"Declares that a type can be used to generate an infinite sequence of values of the associatedtype "},{"type":"codeVoice","code":"T"},{"type":"text","text":"."}],"identifier":"doc:\/\/Genything\/documentation\/Genything\/Generator","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Generator"}],"url":"\/documentation\/genything\/generator"},"doc://Genything/documentation/Genything":{"role":"collection","title":"Genything","abstract":[],"identifier":"doc:\/\/Genything\/documentation\/Genything","kind":"symbol","type":"topic","url":"\/documentation\/genything"},"doc://Genything/documentation/Genything/Generator/startWith(_:)":{"role":"symbol","title":"startWith(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"startWith"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"S"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"S"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"AnyGenerator","preciseIdentifier":"s:9Genything12AnyGeneratorV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Returns: A generator which iterates the elements of "},{"type":"codeVoice","code":"sequence"},{"type":"text","text":". When exhausted the generator will switch to producing values from the receiving generator."}],"identifier":"doc:\/\/Genything\/documentation\/Genything\/Generator\/startWith(_:)","kind":"symbol","type":"topic","url":"\/documentation\/genything\/generator\/startwith(_:)"},"doc://Genything/documentation/Genything/AnyGenerator":{"role":"symbol","title":"AnyGenerator","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyGenerator"}],"abstract":[{"type":"text","text":"A type-erased "},{"type":"codeVoice","code":"Generator"}],"identifier":"doc:\/\/Genything\/documentation\/Genything\/AnyGenerator","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AnyGenerator"}],"url":"\/documentation\/genything\/anygenerator"}}}
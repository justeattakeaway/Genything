{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"regenerate"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"generate"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":", "},{"kind":"typeIdentifier","identifier":"doc:\/\/Genything\/documentation\/Genything\/RandomSource","preciseIdentifier":"s:9Genything12RandomSourceC","text":"RandomSource"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/Genything\/documentation\/Genything\/AnyGenerator","preciseIdentifier":"s:9Genything12AnyGeneratorV","text":"AnyGenerator"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A generator which produces modified values of type "},{"type":"codeVoice","code":"T"}]}]},{"kind":"parameters","parameters":[{"name":"generate","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A block which provides the previously generated value as an inout parameter, allowing you to make changes to the properties contained within if they are variable. To do so the random source is also provided as the second argument."}]}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This generate block is executed for each generated value, only truly arbitrary generators should be created in this block. If a generator which relies on itâ€™s own state is created in this block it will be recreated for each generated value. If a stateful generator is desired to be used you must hold the reference outside the block."}]}],"type":"aside","name":"Attention"}]}],"schemaVersion":{"major":0,"minor":2,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/genything\/generator\/regenerate(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Genything\/documentation\/Genything\/Generator\/regenerate(_:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Apply additional changes to an already created element on the receiving generator"}],"kind":"symbol","metadata":{"role":"symbol","title":"regenerate(_:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"regenerate"},{"kind":"text","text":"(("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"RandomSource","preciseIdentifier":"s:9Genything12RandomSourceC"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"AnyGenerator","preciseIdentifier":"s:9Genything12AnyGeneratorV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"symbolKind":"method","externalID":"s:9Genything9GeneratorPAAE10regenerateyAA03AnyB0Vy1TQzGyAHz_AA12RandomSourceCtcF","extendedModule":"Genything","modules":[{"name":"Genything"}]},"hierarchy":{"paths":[["doc:\/\/Genything\/documentation\/Genything","doc:\/\/Genything\/documentation\/Genything\/Generator"]]},"references":{"doc://Genything/documentation/Genything/Generator/regenerate(_:)":{"role":"symbol","title":"regenerate(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"regenerate"},{"kind":"text","text":"(("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"RandomSource","preciseIdentifier":"s:9Genything12RandomSourceC"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"AnyGenerator","preciseIdentifier":"s:9Genything12AnyGeneratorV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Apply additional changes to an already created element on the receiving generator"}],"identifier":"doc:\/\/Genything\/documentation\/Genything\/Generator\/regenerate(_:)","kind":"symbol","type":"topic","url":"\/documentation\/genything\/generator\/regenerate(_:)"},"doc://Genything/documentation/Genything":{"role":"collection","title":"Genything","abstract":[],"identifier":"doc:\/\/Genything\/documentation\/Genything","kind":"symbol","type":"topic","url":"\/documentation\/genything"},"doc://Genything/documentation/Genything/RandomSource":{"role":"symbol","title":"RandomSource","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"RandomSource"}],"abstract":[{"type":"text","text":"A RandomSource holds a reference to a RandomNumberGenerator. Allowing for a session of deterministic random state to passed around to generators which can be restarted or replayed at any time."}],"identifier":"doc:\/\/Genything\/documentation\/Genything\/RandomSource","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"RandomSource"}],"url":"\/documentation\/genything\/randomsource"},"doc://Genything/documentation/Genything/Generator":{"role":"symbol","title":"Generator","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Generator"}],"abstract":[{"type":"text","text":"Declares that a type can be used to generate an infinite sequence of values of the associatedtype "},{"type":"codeVoice","code":"T"},{"type":"text","text":"."}],"identifier":"doc:\/\/Genything\/documentation\/Genything\/Generator","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Generator"}],"url":"\/documentation\/genything\/generator"},"doc://Genything/documentation/Genything/AnyGenerator":{"role":"symbol","title":"AnyGenerator","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyGenerator"}],"abstract":[{"type":"text","text":"A type-erased "},{"type":"codeVoice","code":"Generator"}],"identifier":"doc:\/\/Genything\/documentation\/Genything\/AnyGenerator","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AnyGenerator"}],"url":"\/documentation\/genything\/anygenerator"}}}
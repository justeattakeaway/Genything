{
  "abstract" : [
    {
      "text" : "Declares that a type can be used to generate an infinite sequence of values of the associatedtype ",
      "type" : "text"
    },
    {
      "code" : "T",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/Genything\/documentation\/Genything"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/Genything\/documentation\/Genything\/Generator"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:9Genything9GeneratorP",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "protocol"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "Generator"
      }
    ],
    "modules" : [
      {
        "name" : "Genything"
      }
    ],
    "navigatorTitle" : [
      {
        "kind" : "identifier",
        "text" : "Generator"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Protocol",
    "symbolKind" : "protocol",
    "title" : "Generator"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "protocol"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "Generator"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "content" : [
        {
          "anchor" : "overview",
          "level" : 2,
          "text" : "Overview",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "A Generators typically creates values using a ",
              "type" : "text"
            },
            {
              "code" : "RandomSource",
              "type" : "codeVoice"
            },
            {
              "text" : ". If the ",
              "type" : "text"
            },
            {
              "code" : "RandomSource",
              "type" : "codeVoice"
            },
            {
              "text" : " is not shared between multiple generators, then they are said to be independent e.g. One generator does not affect the randomness of any other generators.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "content" : [
            {
              "inlineContent" : [
                {
                  "text" : "The generator protocol has no requirement to be random nor is there any requirement to be stateless. The generator might generate random elements or follow some predetermined pattern. Therefore, sharing a generator between unrelated contexts should be done with care.",
                  "type" : "text"
                }
              ],
              "type" : "paragraph"
            }
          ],
          "style" : "note",
          "type" : "aside"
        }
      ],
      "kind" : "content"
    }
  ],
  "relationshipsSections" : [
    {
      "identifiers" : [
        "doc:\/\/Genything\/documentation\/Genything\/AnyGenerator"
      ],
      "kind" : "relationships",
      "title" : "Conforming Types",
      "type" : "conformingTypes"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 2,
    "patch" : 0
  },
  "sections" : [

  ],
  "topicSections" : [
    {
      "identifiers" : [
        "doc:\/\/Genything\/documentation\/Genything\/Generator\/T"
      ],
      "title" : "Associated Types"
    },
    {
      "identifiers" : [
        "doc:\/\/Genything\/documentation\/Genything\/Generator\/debug(_:file:line:)",
        "doc:\/\/Genything\/documentation\/Genything\/Generator\/eraseToAnyGenerator()",
        "doc:\/\/Genything\/documentation\/Genything\/Generator\/expand(toSize:)",
        "doc:\/\/Genything\/documentation\/Genything\/Generator\/expand(toSizeInRange:)-2uhg0",
        "doc:\/\/Genything\/documentation\/Genything\/Generator\/expand(toSizeInRange:)-33rxh",
        "doc:\/\/Genything\/documentation\/Genything\/Generator\/flatMap(_:)",
        "doc:\/\/Genything\/documentation\/Genything\/Generator\/generate(_:)",
        "doc:\/\/Genything\/documentation\/Genything\/Generator\/map(_:)",
        "doc:\/\/Genything\/documentation\/Genything\/Generator\/next(_:)",
        "doc:\/\/Genything\/documentation\/Genything\/Generator\/or(_:otherProbability:)",
        "doc:\/\/Genything\/documentation\/Genything\/Generator\/orNil(nilProbability:)",
        "doc:\/\/Genything\/documentation\/Genything\/Generator\/randomize(with:)",
        "doc:\/\/Genything\/documentation\/Genything\/Generator\/recompose(_:)",
        "doc:\/\/Genything\/documentation\/Genything\/Generator\/regenerate(_:)",
        "doc:\/\/Genything\/documentation\/Genything\/Generator\/replaceNil(with:)",
        "doc:\/\/Genything\/documentation\/Genything\/Generator\/replacingOccurrences(of:in:)",
        "doc:\/\/Genything\/documentation\/Genything\/Generator\/scan(_:_:)",
        "doc:\/\/Genything\/documentation\/Genything\/Generator\/sequence(_:randomSource:)",
        "doc:\/\/Genything\/documentation\/Genything\/Generator\/sequence(randomSource:)",
        "doc:\/\/Genything\/documentation\/Genything\/Generator\/startWith(_:)",
        "doc:\/\/Genything\/documentation\/Genything\/Generator\/take(_:randomSource:)",
        "doc:\/\/Genything\/documentation\/Genything\/Generator\/zip(_:)",
        "doc:\/\/Genything\/documentation\/Genything\/Generator\/zip(_:_:)",
        "doc:\/\/Genything\/documentation\/Genything\/Generator\/zip(_:_:_:)",
        "doc:\/\/Genything\/documentation\/Genything\/Generator\/zip(_:_:_:_:)",
        "doc:\/\/Genything\/documentation\/Genything\/Generator\/zip(_:_:_:_:transform:)",
        "doc:\/\/Genything\/documentation\/Genything\/Generator\/zip(_:_:_:transform:)",
        "doc:\/\/Genything\/documentation\/Genything\/Generator\/zip(_:_:transform:)",
        "doc:\/\/Genything\/documentation\/Genything\/Generator\/zip(_:transform:)"
      ],
      "title" : "Instance Methods"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/genything\/generator"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://Genything/documentation/Genything": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/Genything\/documentation\/Genything",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "Genything",
  "type" : "topic",
  "url" : "\/documentation\/genything"
},
"doc://Genything/documentation/Genything/AnyGenerator": {
  "abstract" : [
    {
      "text" : "A type-erased ",
      "type" : "text"
    },
    {
      "code" : "Generator",
      "type" : "codeVoice"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "AnyGenerator"
    }
  ],
  "identifier" : "doc:\/\/Genything\/documentation\/Genything\/AnyGenerator",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "AnyGenerator"
    }
  ],
  "role" : "symbol",
  "title" : "AnyGenerator",
  "type" : "topic",
  "url" : "\/documentation\/genything\/anygenerator"
},
"doc://Genything/documentation/Genything/Generator": {
  "abstract" : [
    {
      "text" : "Declares that a type can be used to generate an infinite sequence of values of the associatedtype ",
      "type" : "text"
    },
    {
      "code" : "T",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Generator"
    }
  ],
  "identifier" : "doc:\/\/Genything\/documentation\/Genything\/Generator",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Generator"
    }
  ],
  "role" : "symbol",
  "title" : "Generator",
  "type" : "topic",
  "url" : "\/documentation\/genything\/generator"
},
"doc://Genything/documentation/Genything/Generator/T": {
  "abstract" : [
    {
      "text" : "The type of element which this Generator produces",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "associatedtype"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "T"
    }
  ],
  "identifier" : "doc:\/\/Genything\/documentation\/Genything\/Generator\/T",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "T",
  "type" : "topic",
  "url" : "\/documentation\/genything\/generator\/t"
},
"doc://Genything/documentation/Genything/Generator/debug(_:file:line:)": {
  "abstract" : [
    {
      "text" : "Logs a print statement for each value produced by the receiver",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "debug"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "file"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s12StaticStringV",
      "text" : "StaticString"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "line"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Su",
      "text" : "UInt"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:9Genything12AnyGeneratorV",
      "text" : "AnyGenerator"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Genything\/documentation\/Genything\/Generator\/debug(_:file:line:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "debug(_:file:line:)",
  "type" : "topic",
  "url" : "\/documentation\/genything\/generator\/debug(_:file:line:)"
},
"doc://Genything/documentation/Genything/Generator/eraseToAnyGenerator()": {
  "abstract" : [
    {
      "text" : "Erases types conforming to the abstract protocol Generator to the concrete struct AnyGenerator",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "eraseToAnyGenerator"
    },
    {
      "kind" : "text",
      "text" : "() -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:9Genything12AnyGeneratorV",
      "text" : "AnyGenerator"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Genything\/documentation\/Genything\/Generator\/eraseToAnyGenerator()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "eraseToAnyGenerator()",
  "type" : "topic",
  "url" : "\/documentation\/genything\/generator\/erasetoanygenerator()"
},
"doc://Genything/documentation/Genything/Generator/expand(toSize:)": {
  "abstract" : [
    {
      "text" : "Returns: The receiver’s generator expanded to generate an array of the receiver’s values",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "expand"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "toSize"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:9Genything12AnyGeneratorV",
      "text" : "AnyGenerator"
    },
    {
      "kind" : "text",
      "text" : "<["
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : "]>"
    }
  ],
  "identifier" : "doc:\/\/Genything\/documentation\/Genything\/Generator\/expand(toSize:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "expand(toSize:)",
  "type" : "topic",
  "url" : "\/documentation\/genything\/generator\/expand(tosize:)"
},
"doc://Genything/documentation/Genything/Generator/expand(toSizeInRange:)-2uhg0": {
  "abstract" : [
    {
      "text" : "Returns: The receiver’s generator expanded to generate an array of the receiver’s values",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "expand"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "toSizeInRange"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sn",
      "text" : "Range"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : ">) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:9Genything12AnyGeneratorV",
      "text" : "AnyGenerator"
    },
    {
      "kind" : "text",
      "text" : "<["
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : "]>"
    }
  ],
  "identifier" : "doc:\/\/Genything\/documentation\/Genything\/Generator\/expand(toSizeInRange:)-2uhg0",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "expand(toSizeInRange:)",
  "type" : "topic",
  "url" : "\/documentation\/genything\/generator\/expand(tosizeinrange:)-2uhg0"
},
"doc://Genything/documentation/Genything/Generator/expand(toSizeInRange:)-33rxh": {
  "abstract" : [
    {
      "text" : "Returns: The receiver’s generator expanded to generate an array of the receiver’s values",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "expand"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "toSizeInRange"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SN",
      "text" : "ClosedRange"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : ">) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:9Genything12AnyGeneratorV",
      "text" : "AnyGenerator"
    },
    {
      "kind" : "text",
      "text" : "<["
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : "]>"
    }
  ],
  "identifier" : "doc:\/\/Genything\/documentation\/Genything\/Generator\/expand(toSizeInRange:)-33rxh",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "expand(toSizeInRange:)",
  "type" : "topic",
  "url" : "\/documentation\/genything\/generator\/expand(tosizeinrange:)-33rxh"
},
"doc://Genything/documentation/Genything/Generator/flatMap(_:)": {
  "abstract" : [
    {
      "text" : "Returns: A generator that transforms the receiver into a generator of type ",
      "type" : "text"
    },
    {
      "code" : "R",
      "type" : "codeVoice"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "flatMap"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "G"
    },
    {
      "kind" : "text",
      "text" : ">(("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "G"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:9Genything12AnyGeneratorV",
      "text" : "AnyGenerator"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "G"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Genything\/documentation\/Genything\/Generator\/flatMap(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "flatMap(_:)",
  "type" : "topic",
  "url" : "\/documentation\/genything\/generator\/flatmap(_:)"
},
"doc://Genything/documentation/Genything/Generator/generate(_:)": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "generate"
    },
    {
      "kind" : "text",
      "text" : "(("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:9Genything12RandomSourceC",
      "text" : "RandomSource"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:9Genything12AnyGeneratorV",
      "text" : "AnyGenerator"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Genything\/documentation\/Genything\/Generator\/generate(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "generate(_:)",
  "type" : "topic",
  "url" : "\/documentation\/genything\/generator\/generate(_:)"
},
"doc://Genything/documentation/Genything/Generator/map(_:)": {
  "abstract" : [
    {
      "text" : "Returns: A generator that transforms the receivers’ values into a value of type ",
      "type" : "text"
    },
    {
      "code" : "R",
      "type" : "codeVoice"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "map"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "R"
    },
    {
      "kind" : "text",
      "text" : ">(("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "R"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:9Genything12AnyGeneratorV",
      "text" : "AnyGenerator"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "R"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Genything\/documentation\/Genything\/Generator\/map(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "map(_:)",
  "type" : "topic",
  "url" : "\/documentation\/genything\/generator\/map(_:)"
},
"doc://Genything/documentation/Genything/Generator/next(_:)": {
  "abstract" : [
    {
      "text" : "Produces the next element from this generator using the provided random source",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "next"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:9Genything12RandomSourceC",
      "text" : "RandomSource"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    }
  ],
  "identifier" : "doc:\/\/Genything\/documentation\/Genything\/Generator\/next(_:)",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "next(_:)",
  "type" : "topic",
  "url" : "\/documentation\/genything\/generator\/next(_:)"
},
"doc://Genything/documentation/Genything/Generator/or(_:otherProbability:)": {
  "abstract" : [
    {
      "text" : "Returns: A generator which randomly selects values from either the receiver or the ",
      "type" : "text"
    },
    {
      "code" : "other",
      "type" : "codeVoice"
    },
    {
      "text" : " generator",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "or"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "Other"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Other"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "otherProbability"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sd",
      "text" : "Double"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:9Genything12AnyGeneratorV",
      "text" : "AnyGenerator"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Genything\/documentation\/Genything\/Generator\/or(_:otherProbability:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "or(_:otherProbability:)",
  "type" : "topic",
  "url" : "\/documentation\/genything\/generator\/or(_:otherprobability:)"
},
"doc://Genything/documentation/Genything/Generator/orNil(nilProbability:)": {
  "abstract" : [
    {
      "text" : "Returns: A generator that wraps the receivers’ values in an optional",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "orNil"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "nilProbability"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sd",
      "text" : "Double"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:9Genything12AnyGeneratorV",
      "text" : "AnyGenerator"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : "?>"
    }
  ],
  "identifier" : "doc:\/\/Genything\/documentation\/Genything\/Generator\/orNil(nilProbability:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "orNil(nilProbability:)",
  "type" : "topic",
  "url" : "\/documentation\/genything\/generator\/ornil(nilprobability:)"
},
"doc://Genything/documentation/Genything/Generator/randomize(with:)": {
  "abstract" : [
    {
      "text" : "Returns: The receiver generator binded together with ",
      "type" : "text"
    },
    {
      "code" : "randomSource",
      "type" : "codeVoice"
    },
    {
      "text" : " to produce values without requiring a ",
      "type" : "text"
    },
    {
      "code" : "RandomSource",
      "type" : "codeVoice"
    },
    {
      "text" : " at every call",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "randomize"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "with"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:9Genything12RandomSourceC",
      "text" : "RandomSource"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:9Genything19RandomizedGeneratorV",
      "text" : "RandomizedGenerator"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Genything\/documentation\/Genything\/Generator\/randomize(with:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "randomize(with:)",
  "type" : "topic",
  "url" : "\/documentation\/genything\/generator\/randomize(with:)"
},
"doc://Genything/documentation/Genything/Generator/recompose(_:)": {
  "abstract" : [
    {
      "text" : "Apply additional changes to an already created element on the receiving generator",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "recompose"
    },
    {
      "kind" : "text",
      "text" : "(("
    },
    {
      "kind" : "keyword",
      "text" : "inout"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:9Genything8ComposerV",
      "text" : "Composer"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:9Genything12AnyGeneratorV",
      "text" : "AnyGenerator"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Genything\/documentation\/Genything\/Generator\/recompose(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "recompose(_:)",
  "type" : "topic",
  "url" : "\/documentation\/genything\/generator\/recompose(_:)"
},
"doc://Genything/documentation/Genything/Generator/regenerate(_:)": {
  "abstract" : [
    {
      "text" : "Apply additional changes to an already created element on the receiving generator",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "regenerate"
    },
    {
      "kind" : "text",
      "text" : "(("
    },
    {
      "kind" : "keyword",
      "text" : "inout"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:9Genything12RandomSourceC",
      "text" : "RandomSource"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:9Genything12AnyGeneratorV",
      "text" : "AnyGenerator"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Genything\/documentation\/Genything\/Generator\/regenerate(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "regenerate(_:)",
  "type" : "topic",
  "url" : "\/documentation\/genything\/generator\/regenerate(_:)"
},
"doc://Genything/documentation/Genything/Generator/replaceNil(with:)": {
  "abstract" : [
    {
      "text" : "Returns: A generator that replaces the receivers’ nil values with the replacement",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "replaceNil"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "R"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "with"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "R"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:9Genything12AnyGeneratorV",
      "text" : "AnyGenerator"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "R"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Genything\/documentation\/Genything\/Generator\/replaceNil(with:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "replaceNil(with:)",
  "type" : "topic",
  "url" : "\/documentation\/genything\/generator\/replacenil(with:)"
},
"doc://Genything/documentation/Genything/Generator/replacingOccurrences(of:in:)": {
  "abstract" : [
    {
      "text" : "Returns: A generator of strings which replace ",
      "type" : "text"
    },
    {
      "code" : "character",
      "type" : "codeVoice"
    },
    {
      "text" : " in ",
      "type" : "text"
    },
    {
      "code" : "source",
      "type" : "codeVoice"
    },
    {
      "text" : " by the content of the receiver’s generator",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "replacingOccurrences"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "of"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "in"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:9Genything12AnyGeneratorV",
      "text" : "AnyGenerator"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Genything\/documentation\/Genything\/Generator\/replacingOccurrences(of:in:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "replacingOccurrences(of:in:)",
  "type" : "topic",
  "url" : "\/documentation\/genything\/generator\/replacingoccurrences(of:in:)"
},
"doc://Genything/documentation/Genything/Generator/scan(_:_:)": {
  "abstract" : [
    {
      "text" : "Returns: A generator that transforms the receivers’ values by providing the current element to a closure along with the last value produced by the resulting Generator.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "scan"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "R"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "R"
    },
    {
      "kind" : "text",
      "text" : ", ("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "R"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "R"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:9Genything12AnyGeneratorV",
      "text" : "AnyGenerator"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "R"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Genything\/documentation\/Genything\/Generator\/scan(_:_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "scan(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/genything\/generator\/scan(_:_:)"
},
"doc://Genything/documentation/Genything/Generator/sequence(_:randomSource:)": {
  "abstract" : [
    {
      "text" : "Returns: A sequence of this generator’s values which will produce ",
      "type" : "text"
    },
    {
      "code" : "nil",
      "type" : "codeVoice"
    },
    {
      "text" : " after ",
      "type" : "text"
    },
    {
      "code" : "size",
      "type" : "codeVoice"
    },
    {
      "text" : " iterations",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "sequence"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "randomSource"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:9Genything12RandomSourceC",
      "text" : "RandomSource"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s11AnySequenceV",
      "text" : "AnySequence"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Genything\/documentation\/Genything\/Generator\/sequence(_:randomSource:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "sequence(_:randomSource:)",
  "type" : "topic",
  "url" : "\/documentation\/genything\/generator\/sequence(_:randomsource:)"
},
"doc://Genything/documentation/Genything/Generator/sequence(randomSource:)": {
  "abstract" : [
    {
      "text" : "Returns: A sequence of this generator’s values which will produce infinite elements",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "sequence"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "randomSource"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:9Genything12RandomSourceC",
      "text" : "RandomSource"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:9Genything27RandomizedGeneratorSequenceV",
      "text" : "RandomizedGeneratorSequence"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Genything\/documentation\/Genything\/Generator\/sequence(randomSource:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "sequence(randomSource:)",
  "type" : "topic",
  "url" : "\/documentation\/genything\/generator\/sequence(randomsource:)"
},
"doc://Genything/documentation/Genything/Generator/startWith(_:)": {
  "abstract" : [
    {
      "text" : "Returns: A generator which iterates the elements of ",
      "type" : "text"
    },
    {
      "code" : "sequence",
      "type" : "codeVoice"
    },
    {
      "text" : ". When exhausted the generator will switch to producing values from the receiving generator.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "startWith"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "S"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "S"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:9Genything12AnyGeneratorV",
      "text" : "AnyGenerator"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Genything\/documentation\/Genything\/Generator\/startWith(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "startWith(_:)",
  "type" : "topic",
  "url" : "\/documentation\/genything\/generator\/startwith(_:)"
},
"doc://Genything/documentation/Genything/Generator/take(_:randomSource:)": {
  "abstract" : [
    {
      "text" : "Returns: An array of values from the generator",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "take"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "randomSource"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:9Genything12RandomSourceC",
      "text" : "RandomSource"
    },
    {
      "kind" : "text",
      "text" : ") -> ["
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : "]"
    }
  ],
  "identifier" : "doc:\/\/Genything\/documentation\/Genything\/Generator\/take(_:randomSource:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "take(_:randomSource:)",
  "type" : "topic",
  "url" : "\/documentation\/genything\/generator\/take(_:randomsource:)"
},
"doc://Genything/documentation/Genything/Generator/zip(_:)": {
  "abstract" : [
    {
      "text" : "Returns: A generator by zipping together the values produced by the receiver and ",
      "type" : "text"
    },
    {
      "code" : "other",
      "type" : "codeVoice"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "zip"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "B"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "B"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:9Genything12AnyGeneratorV",
      "text" : "AnyGenerator"
    },
    {
      "kind" : "text",
      "text" : "<("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "B"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ")>"
    }
  ],
  "identifier" : "doc:\/\/Genything\/documentation\/Genything\/Generator\/zip(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "zip(_:)",
  "type" : "topic",
  "url" : "\/documentation\/genything\/generator\/zip(_:)"
},
"doc://Genything/documentation/Genything/Generator/zip(_:_:)": {
  "abstract" : [
    {
      "text" : "Returns: A generator by zipping together the values produced by the receiver and ",
      "type" : "text"
    },
    {
      "code" : "other",
      "type" : "codeVoice"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "zip"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "B"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "C"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "B"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "C"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:9Genything12AnyGeneratorV",
      "text" : "AnyGenerator"
    },
    {
      "kind" : "text",
      "text" : "<("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "B"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "C"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ")>"
    }
  ],
  "identifier" : "doc:\/\/Genything\/documentation\/Genything\/Generator\/zip(_:_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "zip(_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/genything\/generator\/zip(_:_:)"
},
"doc://Genything/documentation/Genything/Generator/zip(_:_:_:)": {
  "abstract" : [
    {
      "text" : "Returns: A generator by zipping together the values produced by the receiver and ",
      "type" : "text"
    },
    {
      "code" : "other",
      "type" : "codeVoice"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "zip"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "B"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "C"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "D"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "B"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "C"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "D"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:9Genything12AnyGeneratorV",
      "text" : "AnyGenerator"
    },
    {
      "kind" : "text",
      "text" : "<("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "B"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "C"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "D"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ")>"
    }
  ],
  "identifier" : "doc:\/\/Genything\/documentation\/Genything\/Generator\/zip(_:_:_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "zip(_:_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/genything\/generator\/zip(_:_:_:)"
},
"doc://Genything/documentation/Genything/Generator/zip(_:_:_:_:)": {
  "abstract" : [
    {
      "text" : "Returns: A generator by zipping together the values produced by the receiver and ",
      "type" : "text"
    },
    {
      "code" : "other",
      "type" : "codeVoice"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "zip"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "B"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "C"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "D"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "E"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "B"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "C"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "D"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "E"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:9Genything12AnyGeneratorV",
      "text" : "AnyGenerator"
    },
    {
      "kind" : "text",
      "text" : "<("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "B"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "C"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "D"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "E"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ")>"
    }
  ],
  "identifier" : "doc:\/\/Genything\/documentation\/Genything\/Generator\/zip(_:_:_:_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "zip(_:_:_:_:)",
  "type" : "topic",
  "url" : "\/documentation\/genything\/generator\/zip(_:_:_:_:)"
},
"doc://Genything/documentation/Genything/Generator/zip(_:_:_:_:transform:)": {
  "abstract" : [
    {
      "text" : "Returns: A generator by zipping together the values produced by the receiver and ",
      "type" : "text"
    },
    {
      "code" : "other",
      "type" : "codeVoice"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "zip"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "B"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "C"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "D"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "E"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "R"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "B"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "C"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "D"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "E"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "transform"
    },
    {
      "kind" : "text",
      "text" : ": ("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "B"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "C"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "D"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "E"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "R"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:9Genything12AnyGeneratorV",
      "text" : "AnyGenerator"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "R"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Genything\/documentation\/Genything\/Generator\/zip(_:_:_:_:transform:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "zip(_:_:_:_:transform:)",
  "type" : "topic",
  "url" : "\/documentation\/genything\/generator\/zip(_:_:_:_:transform:)"
},
"doc://Genything/documentation/Genything/Generator/zip(_:_:_:transform:)": {
  "abstract" : [
    {
      "text" : "Returns: A generator by zipping together the values produced by the receiver and ",
      "type" : "text"
    },
    {
      "code" : "other",
      "type" : "codeVoice"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "zip"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "B"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "C"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "D"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "R"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "B"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "C"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "D"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "transform"
    },
    {
      "kind" : "text",
      "text" : ": ("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "B"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "C"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "D"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "R"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:9Genything12AnyGeneratorV",
      "text" : "AnyGenerator"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "R"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Genything\/documentation\/Genything\/Generator\/zip(_:_:_:transform:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "zip(_:_:_:transform:)",
  "type" : "topic",
  "url" : "\/documentation\/genything\/generator\/zip(_:_:_:transform:)"
},
"doc://Genything/documentation/Genything/Generator/zip(_:_:transform:)": {
  "abstract" : [
    {
      "text" : "Returns: A generator by zipping together the values produced by the receiver and ",
      "type" : "text"
    },
    {
      "code" : "other",
      "type" : "codeVoice"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "zip"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "B"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "C"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "R"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "B"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "C"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "transform"
    },
    {
      "kind" : "text",
      "text" : ": ("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "B"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "C"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "R"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:9Genything12AnyGeneratorV",
      "text" : "AnyGenerator"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "R"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Genything\/documentation\/Genything\/Generator\/zip(_:_:transform:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "zip(_:_:transform:)",
  "type" : "topic",
  "url" : "\/documentation\/genything\/generator\/zip(_:_:transform:)"
},
"doc://Genything/documentation/Genything/Generator/zip(_:transform:)": {
  "abstract" : [
    {
      "text" : "Returns: A generator by zipping together the values produced by the receiver and ",
      "type" : "text"
    },
    {
      "code" : "other",
      "type" : "codeVoice"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "zip"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "B"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "genericParameter",
      "text" : "R"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "B"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "transform"
    },
    {
      "kind" : "text",
      "text" : ": ("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "B"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "text" : "T"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "R"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:9Genything12AnyGeneratorV",
      "text" : "AnyGenerator"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "R"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/Genything\/documentation\/Genything\/Generator\/zip(_:transform:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "zip(_:transform:)",
  "type" : "topic",
  "url" : "\/documentation\/genything\/generator\/zip(_:transform:)"
}
}
}
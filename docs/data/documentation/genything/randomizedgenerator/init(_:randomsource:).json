{
  "abstract" : [
    {
      "text" : "Initializes a RandomizedGenerator wrapper, which consists of the ",
      "type" : "text"
    },
    {
      "code" : "wrapped",
      "type" : "codeVoice"
    },
    {
      "text" : " Generator binded together with ",
      "type" : "text"
    },
    {
      "code" : "randomSource",
      "type" : "codeVoice"
    },
    {
      "text" : " to produce values without requiring a ",
      "type" : "text"
    },
    {
      "code" : "RandomSource",
      "type" : "codeVoice"
    },
    {
      "text" : " at every call",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/Genything\/documentation\/Genything",
        "doc:\/\/Genything\/documentation\/Genything\/RandomizedGenerator"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/Genything\/documentation\/Genything\/RandomizedGenerator\/init(_:randomSource:)"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:9Genything19RandomizedGeneratorV_12randomSourceACyxGx_AA06RandomE0Ctcfc",
    "fragments" : [
      {
        "kind" : "identifier",
        "text" : "init"
      },
      {
        "kind" : "text",
        "text" : "("
      },
      {
        "kind" : "typeIdentifier",
        "text" : "G"
      },
      {
        "kind" : "text",
        "text" : ", "
      },
      {
        "kind" : "externalParam",
        "text" : "randomSource"
      },
      {
        "kind" : "text",
        "text" : ": "
      },
      {
        "kind" : "typeIdentifier",
        "preciseIdentifier" : "s:9Genything12RandomSourceC",
        "text" : "RandomSource"
      },
      {
        "kind" : "text",
        "text" : ")"
      }
    ],
    "modules" : [
      {
        "name" : "Genything"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Initializer",
    "symbolKind" : "init",
    "title" : "init(_:randomSource:)"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "init"
            },
            {
              "kind" : "text",
              "text" : "("
            },
            {
              "kind" : "externalParam",
              "text" : "_"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "internalParam",
              "text" : "wrapped"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "kind" : "typeIdentifier",
              "text" : "G"
            },
            {
              "kind" : "text",
              "text" : ", "
            },
            {
              "kind" : "externalParam",
              "text" : "randomSource"
            },
            {
              "kind" : "text",
              "text" : ": "
            },
            {
              "identifier" : "doc:\/\/Genything\/documentation\/Genything\/RandomSource",
              "kind" : "typeIdentifier",
              "preciseIdentifier" : "s:9Genything12RandomSourceC",
              "text" : "RandomSource"
            },
            {
              "kind" : "text",
              "text" : ")"
            }
          ]
        }
      ],
      "kind" : "declarations"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 2,
    "patch" : 0
  },
  "sections" : [

  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/genything\/randomizedgenerator\/init(_:randomsource:)"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://Genything/documentation/Genything": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/Genything\/documentation\/Genything",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "Genything",
  "type" : "topic",
  "url" : "\/documentation\/genything"
},
"doc://Genything/documentation/Genything/RandomSource": {
  "abstract" : [
    {
      "text" : "A RandomSource holds a reference to a RandomNumberGenerator. Allowing for a session of deterministic random state to passed around to generators which can be restarted or replayed at any time.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "RandomSource"
    }
  ],
  "identifier" : "doc:\/\/Genything\/documentation\/Genything\/RandomSource",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "RandomSource"
    }
  ],
  "role" : "symbol",
  "title" : "RandomSource",
  "type" : "topic",
  "url" : "\/documentation\/genything\/randomsource"
},
"doc://Genything/documentation/Genything/RandomizedGenerator": {
  "abstract" : [
    {
      "text" : "A Generator binded together with a RandomSource which has copies of Generator functions which produce values. Used to persist the randomness between multiple generated productions of values.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "RandomizedGenerator"
    }
  ],
  "identifier" : "doc:\/\/Genything\/documentation\/Genything\/RandomizedGenerator",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "RandomizedGenerator"
    }
  ],
  "role" : "symbol",
  "title" : "RandomizedGenerator",
  "type" : "topic",
  "url" : "\/documentation\/genything\/randomizedgenerator"
},
"doc://Genything/documentation/Genything/RandomizedGenerator/init(_:randomSource:)": {
  "abstract" : [
    {
      "text" : "Initializes a RandomizedGenerator wrapper, which consists of the ",
      "type" : "text"
    },
    {
      "code" : "wrapped",
      "type" : "codeVoice"
    },
    {
      "text" : " Generator binded together with ",
      "type" : "text"
    },
    {
      "code" : "randomSource",
      "type" : "codeVoice"
    },
    {
      "text" : " to produce values without requiring a ",
      "type" : "text"
    },
    {
      "code" : "RandomSource",
      "type" : "codeVoice"
    },
    {
      "text" : " at every call",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "text" : "G"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "randomSource"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:9Genything12RandomSourceC",
      "text" : "RandomSource"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/Genything\/documentation\/Genything\/RandomizedGenerator\/init(_:randomSource:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(_:randomSource:)",
  "type" : "topic",
  "url" : "\/documentation\/genything\/randomizedgenerator\/init(_:randomsource:)"
}
}
}
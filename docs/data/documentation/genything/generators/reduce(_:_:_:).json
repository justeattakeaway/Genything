{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"reduce"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"G"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"R"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"generators"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"G"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"initialResult"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":", "},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"nextPartialResult"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"G"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/Genything\/documentation\/Genything\/AnyGenerator","preciseIdentifier":"s:9Genything12AnyGeneratorV","text":"AnyGenerator"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"G"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/Genything\/documentation\/Genything\/Generator","preciseIdentifier":"s:9Genything9GeneratorP","text":"Generator"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A "},{"type":"codeVoice","code":"Gen"},{"type":"text","text":" generator producing the final accumulated value. If the collection has no elements, the result will be initialResult."}]}]},{"kind":"parameters","parameters":[{"name":"generators","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A collection of generators to be reduced into a single generator instance"}]}]},{"name":"initialResult","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The value to use as the initial accumulating value. initialResult is passed to nextPartialResult the first time the closure is executed."}]}]},{"name":"nextPartialResult","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A closure that combines an accumulating value and an element of the collection into a new accumulating value, to be used in the next call of the nextPartialResult closure or returned to the caller."}]}]}]}],"schemaVersion":{"major":0,"minor":2,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/genything\/generators\/reduce(_:_:_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Genything\/documentation\/Genything\/Generators\/reduce(_:_:_:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Returns: A generator resulting from combining generated elements from the generators collection using the given closure"}],"kind":"symbol","metadata":{"role":"symbol","title":"reduce(_:_:_:)","roleHeading":"Type Method","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"reduce"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"G"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"R"},{"kind":"text","text":">(["},{"kind":"typeIdentifier","text":"G"},{"kind":"text","text":"], "},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":", ("},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"G"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"AnyGenerator","preciseIdentifier":"s:9Genything12AnyGeneratorV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":">"}],"symbolKind":"method","externalID":"s:9Genything10GeneratorsO6reduceyAA12AnyGeneratorVyq_GSayxG_q_q_q__1TQztctAA0E0Rzr0_lFZ","extendedModule":"Genything","modules":[{"name":"Genything"}]},"hierarchy":{"paths":[["doc:\/\/Genything\/documentation\/Genything","doc:\/\/Genything\/documentation\/Genything\/Generators"]]},"references":{"doc://Genything/documentation/Genything/Generators":{"role":"symbol","title":"Generators","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Generators"}],"abstract":[{"type":"text","text":"A namespace for types that generate"}],"identifier":"doc:\/\/Genything\/documentation\/Genything\/Generators","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Generators"}],"url":"\/documentation\/genything\/generators"},"doc://Genything/documentation/Genything":{"role":"collection","title":"Genything","abstract":[],"identifier":"doc:\/\/Genything\/documentation\/Genything","kind":"symbol","type":"topic","url":"\/documentation\/genything"},"doc://Genything/documentation/Genything/AnyGenerator":{"role":"symbol","title":"AnyGenerator","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyGenerator"}],"abstract":[{"type":"text","text":"A type-erased "},{"type":"codeVoice","code":"Generator"}],"identifier":"doc:\/\/Genything\/documentation\/Genything\/AnyGenerator","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AnyGenerator"}],"url":"\/documentation\/genything\/anygenerator"},"doc://Genything/documentation/Genything/Generator":{"role":"symbol","title":"Generator","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Generator"}],"abstract":[{"type":"text","text":"Declares that a type can be used to generate an infinite sequence of values of the associatedtype "},{"type":"codeVoice","code":"T"},{"type":"text","text":"."}],"identifier":"doc:\/\/Genything\/documentation\/Genything\/Generator","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Generator"}],"url":"\/documentation\/genything\/generator"},"doc://Genything/documentation/Genything/Generators/reduce(_:_:_:)":{"role":"symbol","title":"reduce(_:_:_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"reduce"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"G"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"R"},{"kind":"text","text":">(["},{"kind":"typeIdentifier","text":"G"},{"kind":"text","text":"], "},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":", ("},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"G"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"AnyGenerator","preciseIdentifier":"s:9Genything12AnyGeneratorV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Returns: A generator resulting from combining generated elements from the generators collection using the given closure"}],"identifier":"doc:\/\/Genything\/documentation\/Genything\/Generators\/reduce(_:_:_:)","kind":"symbol","type":"topic","url":"\/documentation\/genything\/generators\/reduce(_:_:_:)"}}}
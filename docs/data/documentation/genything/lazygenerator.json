{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"LazyGenerator"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"G"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"G"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/Genything\/documentation\/Genything\/Generator","preciseIdentifier":"s:9Genything9GeneratorP","text":"Generator"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The wrapped Generator can be safely transformed while retaining the lazy initialization via "},{"type":"codeVoice","code":"map(transform:)"}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/genything\/lazygenerator"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Genything\/documentation\/Genything\/LazyGenerator","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"A LazyGenerator defers the initialization of a generator until a later time. This can be used when generators have state requirements which might cause them to behave in unexpected ways when shared or recreated."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"LazyGenerator"}],"title":"LazyGenerator","roleHeading":"Structure","role":"symbol","symbolKind":"struct","externalID":"s:9Genything13LazyGeneratorV","modules":[{"name":"Genything"}],"navigatorTitle":[{"kind":"identifier","text":"LazyGenerator"}]},"hierarchy":{"paths":[["doc:\/\/Genything\/documentation\/Genything"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/Genything\/documentation\/Genything\/LazyGenerator\/init(_:)"]},{"title":"Instance Methods","identifiers":["doc:\/\/Genything\/documentation\/Genything\/LazyGenerator\/map(_:)","doc:\/\/Genything\/documentation\/Genything\/LazyGenerator\/start()"]}],"references":{"doc://Genything/documentation/Genything/Generator":{"role":"symbol","title":"Generator","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Generator"}],"abstract":[{"type":"text","text":"Declares that a type can be used to generate an infinite sequence of values of the associatedtype "},{"type":"codeVoice","code":"T"},{"type":"text","text":"."}],"identifier":"doc:\/\/Genything\/documentation\/Genything\/Generator","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Generator"}],"url":"\/documentation\/genything\/generator"},"doc://Genything/documentation/Genything":{"role":"collection","title":"Genything","abstract":[],"identifier":"doc:\/\/Genything\/documentation\/Genything","kind":"symbol","type":"topic","url":"\/documentation\/genything"},"doc://Genything/documentation/Genything/LazyGenerator/map(_:)":{"role":"symbol","title":"map(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"map"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"R"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"G"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"LazyGenerator","preciseIdentifier":"s:9Genything13LazyGeneratorV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Returns: A generatable that transforms itâ€™s wrapped generator. The transformations will be deferred until after the Generatable has been started allowing for transformations that can be shared safely."}],"identifier":"doc:\/\/Genything\/documentation\/Genything\/LazyGenerator\/map(_:)","kind":"symbol","type":"topic","url":"\/documentation\/genything\/lazygenerator\/map(_:)"},"doc://Genything/documentation/Genything/LazyGenerator":{"role":"symbol","title":"LazyGenerator","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"LazyGenerator"}],"abstract":[{"type":"text","text":"A LazyGenerator defers the initialization of a generator until a later time. This can be used when generators have state requirements which might cause them to behave in unexpected ways when shared or recreated."}],"identifier":"doc:\/\/Genything\/documentation\/Genything\/LazyGenerator","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"LazyGenerator"}],"url":"\/documentation\/genything\/lazygenerator"},"doc://Genything/documentation/Genything/LazyGenerator/start()":{"role":"symbol","title":"start()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"start"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"G"}],"abstract":[{"type":"text","text":"Produce a generator using the wrapped factory"}],"identifier":"doc:\/\/Genything\/documentation\/Genything\/LazyGenerator\/start()","kind":"symbol","type":"topic","url":"\/documentation\/genything\/lazygenerator\/start()"},"doc://Genything/documentation/Genything/LazyGenerator/init(_:)":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"(() -> "},{"kind":"typeIdentifier","text":"G"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Initializes the DeferredGenerator with a starter factory that produces a Generator when started"}],"identifier":"doc:\/\/Genything\/documentation\/Genything\/LazyGenerator\/init(_:)","kind":"symbol","type":"topic","url":"\/documentation\/genything\/lazygenerator\/init(_:)"}}}